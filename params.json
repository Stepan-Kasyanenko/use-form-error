{
  "name": "Use-form-error",
  "tagline": "Directive angularjs, which helps to validate the input form.",
  "body": "# use-form-error\r\n**useFormError** is a directive, which is designed to create custom checks.\r\n - The directive itself set key/value pair with the `ngModel` **$error** object (which stores a key/value state of validation errors).\r\n - `useformError` depending on the value of the expression `useErrorExpression` establishes the validity of input form, and accordingly, the entire form.\r\n\r\n#Table of contents\r\n - [Install](#install)\r\n - [Usage](#usage)\r\n - [Description params](#description-parameters)\r\n - [Examples](#examples)\r\n\r\n---\r\n# Install\r\n Installation with `bower`.\r\n \r\n `bower install use-form-error`\r\n \r\n Or simply download the file [use-form-error](https://github.com/Stepan-Kasyanenko/use-form-error/raw/master/dist/use-form-error.js)\r\n\r\n# Usage\r\n\r\nYou must connect the module `use` under the project dependencies.\r\n```javascript\r\nangular.module('ExampleApp', ['use']);\r\n```\r\n\r\nIt can be used in three versions:\r\n - Used on tags with `ngModel`, like `input`, `select`, `textarea`.\r\n - Used on tags without `ngModel` with the name of input form, like `div`, `span`, `form`.\r\n - Used on tags without `ngModel`, like `div`, `span`, `form`. In this case, the validity of the forms to be used.\r\n\r\n## Using with ngModel\r\n```html\r\n\t  <input ng-model=\"expression\" use-form-error=\"keyValue\" use-error-expression=\"expression\" />\r\n```\r\n## Using without ngModel, but with the name of input form\r\n```html\r\n\t  <input ng-model=\"expression\" name=\"nameInput\">\r\n\t  <any use-form-error=\"keyValue\" use-error-expression=\"expression\" use-error-input=\"nameInput\" />\r\n```\t  \r\n## Using without ngModel, but without the name of input form. \r\n\r\n In this case, the validity of the forms to be used.\r\n```html \r\n\t  <input ng-model=\"expression\">\r\n\t  <any use-form-error=\"keyValue\" use-error-expression=\"expression\" />\r\n```\r\n---\r\n\r\n# Description parameters\r\n\r\nParameters description directive.\r\n- `@param` {string} **useFormError** this is the key is to be set in the object **$error** form or input form.\r\n- `@param` {expression} **useErrorExpression** an angular expression evaluating to set validity to form or input form.\r\n- `@param` {?object} **useErrorInput** an optional parameter that contains a form or the input form. If this parameter is not set, the validity will be set in the form.\r\n\r\n---\r\n\r\n# Examples\t \r\nExamples of using.\r\n## Using with ngModel. \r\nExample on [jsfiddle](https://jsfiddle.net/Stepan_Kasyanenko/gugq2o6n)\r\n```html\r\n\t      <form name=\"myForm\">\r\n\t        <label>Enter your odd digit:</label>\r\n\t        <input type=\"text\"\r\n\t               ng-model=\"digit\"\r\n\t               name=\"myDigit\"\r\n\t               ng-minlength=\"1\"\r\n\t               ng-maxlength=\"20\"\r\n\t               required\r\n\t               use-form-error=\"isEven\"\r\n\t               use-error-expression=\"digit%2==0\"\r\n\t               />\r\n\t \r\n\t        <pre>myForm.myDigit.$error = {{ myForm.myDigit.$error | json }}</pre>\r\n\t \r\n\t        <div ng-messages=\"myForm.myDigit.$error\" style=\"color:maroon\">\r\n\t          <div ng-message=\"required\">You did not enter a digit</div>\r\n\t          <div ng-message=\"minlength\">Your digit is too short</div>\r\n\t          <div ng-message=\"maxlength\">Your digit is too long</div>\r\n\t          <div ng-message=\"isEven\">Your digit is even</div>\r\n\t        </div>\r\n\t      </form>\r\n```\t \r\n## Using without ngModel\r\nExample on [jsfiddle](https://jsfiddle.net/Stepan_Kasyanenko/crsqs5nd)\r\n```html\r\n\t      <form name=\"myForm\">\r\n\t        <label>Your number is not to be divided by three:</label>\r\n\t        <input type=\"text\"\r\n\t               ng-model=\"digit\"\r\n\t               name=\"myDigit\"\r\n\t               ng-minlength=\"1\"\r\n\t               ng-maxlength=\"20\"\r\n\t               required\r\n\t               />\r\n\t        <span use-form-error=\"isDividedThree\" use-error-expression=\"digit%3==0\" use-error-input=\"myForm.myDigit\"></span>\r\n\t        <pre>myForm.myDigit.$error = {{ myForm.myDigit.$error | json }}</pre>\r\n\t \r\n\t        <div ng-messages=\"myForm.myDigit.$error\" style=\"color:maroon\">\r\n\t          <div ng-message=\"required\">You did not enter a digit</div>\r\n\t          <div ng-message=\"minlength\">Your digit is too short</div>\r\n\t          <div ng-message=\"maxlength\">Your digit is too long</div>\r\n\t          <div ng-message=\"isDividedThree\">Your digit is divided by three</div>\r\n\t        </div>\r\n\t      </form>\r\n```\t \r\n## Using both together with ngModel and without ngModel\r\nExample on [jsfiddle](https://jsfiddle.net/Stepan_Kasyanenko/woqck67w)\r\n```html\r\n\t      <form name=\"myForm\">\r\n\t        <label>Your number should be even and not divisible by three.</label>\r\n\t        <input type=\"text\"\r\n\t               ng-model=\"digit\"\r\n\t               name=\"myDigit\"\r\n\t               ng-minlength=\"1\"\r\n\t               ng-maxlength=\"20\"\r\n\t               required\r\n\t               use-form-error=\"isEven\"\r\n\t               use-error-expression=\"digit%2==0\"\r\n\t               />\r\n\t        <span use-form-error=\"isDividedThree\" use-error-expression=\"digit%3==0\" use-error-input=\"myForm.myDigit\"></span>\r\n\t        <pre>myForm.myDigit.$error = {{ myForm.myDigit.$error | json }}</pre>\r\n\t \r\n\t        <div ng-messages=\"myForm.myDigit.$error\" style=\"color:maroon\">\r\n\t          <div ng-message=\"required\">You did not enter a digit</div>\r\n\t          <div ng-message=\"minlength\">Your digit is too short</div>\r\n\t          <div ng-message=\"maxlength\">Your digit is too long</div>\r\n\t          <div ng-message=\"isEven\">Your digit is even</div>\r\n\t          <div ng-message=\"isDividedThree\">Your digit is divided by three</div>\r\n\t        </div>\r\n\t      </form>\r\n```\t \r\n## Using with ngModel, ngForm and without ngModel\r\nExample on [jsfiddle](https://jsfiddle.net/Stepan_Kasyanenko/wL9c2feo)\r\n```html\r\n\t     <form name=\"myForm\" use-form-error=\"formInvalid\" use-error-expression=\"digit==9\">\r\n\t \t\t\t<div ng-messages=\"myForm.$error\" style=\"color:maroon\">\r\n\t \t\t\t\t<div ng-message=\"formInvalid\">You form is not valid</div>\r\n\t \t\t\t</div>\r\n\t \t\t\t<label>Your number should be even, not divisible by three and should not be 6,7,9:</label>\r\n\t \t\t\t<input type=\"text\"\r\n\t \t\t\t\t\t\t ng-model=\"digit\"\r\n\t \t\t\t\t\t\t name=\"myDigit\"\r\n\t \t\t\t\t\t\t ng-minlength=\"1\"\r\n\t \t\t\t\t\t\t ng-maxlength=\"20\"\r\n\t \t\t\t\t\t\t required\r\n\t \t\t\t\t\t\t use-form-error=\"isEven\" \r\n\t \t\t\t\t\t\t use-error-expression=\"digit%2==0\"\r\n\t \t\t\t\t/>\r\n\t \t\t\t<span use-form-error=\"isDividedThree\" use-error-expression=\"digit%3==0\" use-error-input=\"myForm.myDigit\"></span>\r\n\t \t\t\t<span use-form-error=\"formInvalid\" use-error-expression=\"digit==7\" use-error-input=\"myForm.myDigit\"></span>\r\n\t \t\t\t<span use-form-error=\"formInvalid\" use-error-expression=\"digit==6\"></span>\r\n\t \t\t\t<pre>myForm.myDigit.$error = {{ myForm.myDigit.$error | json }}</pre>\r\n\t \r\n\t \t\t\t<div ng-messages=\"myForm.myDigit.$error\" ng-messages-multiple=\"true\" style=\"color:maroon\">\r\n\t \t\t\t\t<div ng-message=\"required\">You did not enter a digit</div>\r\n\t \t\t\t\t<div ng-message=\"minlength\">Your digit is too short</div>\r\n\t \t\t\t\t<div ng-message=\"maxlength\">Your digit is too long</div>\r\n\t \t\t\t\t<div ng-message=\"isEven\">Your digit is even</div>\r\n\t \t\t\t\t<div ng-message=\"isDividedThree\">Your digit is divided by three</div>\r\n\t \t\t\t</div>\r\n\t \t\t</form>\r\n```\t \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}